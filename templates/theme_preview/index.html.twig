{% extends 'base.html.twig' %}

{% block body %}
    <div style="display: flex; height: 100vh;">
        <div style="flex:1; border-right: 1px solid #ddd; overflow:auto;">
            <iframe
                    id="previewFrame"
                    src="{{ previewBaseUrl ~ '/' ~ section }}"
                    style="width:100%; height:100%; border:none;"
            ></iframe>
        </div>
        <div style="width: 300px; padding: 1rem; overflow:auto;">
            <h3>Theme Variables</h3>
            {% for var, value in variables %}
                <div style="margin-bottom: .5rem;">
                    <label>{{ var }}</label>
                    <input type="color" data-var="{{ var }}" value="{{ value }}">
                </div>
            {% endfor %}
        </div>
    </div>

    <script>
        const iframe = document.getElementById('previewFrame');
        const inputs = Array.from(document.querySelectorAll('input[data-var]'));

        // Debounce helper
        function debounce(fn, delay = 200) {
            let t;
            return (...args) => {
                clearTimeout(t);
                t = setTimeout(() => fn(...args), delay);
            };
        }

        // Wyślij wszystkie wartości za każdym razem
        const sendUpdate = debounce(() => {
            const vars = {};
            inputs.forEach(i => vars[i.dataset.var] = i.value);
            console.log('▶️ wysyłam do iframe:', vars);
            iframe.contentWindow.postMessage({ type: 'updateAll', vars }, '*');
        }, 150);

        // Po załadowaniu ramki – wyślij początkowe wartości
        iframe.addEventListener('load', sendUpdate);

        // Na każdej zmianie color-pickera
        inputs.forEach(input => {
            input.addEventListener('input', sendUpdate);
        });
    </script>
{% endblock %}
